#! /bin/bash
# --------------------------------------------------
# Project Monitor
#       https://github.com/Statemood/monitor
#
# Created by Lin Ru Lin.Ru@msn.com
# Updated by Xingyou Chen <rockrush@rockwork.org>
# --------------------------------------------------

 id="$1"
arg="$2"

if [ "$#" -lt 2 ]
then
    echo "Missing arguments"
    exit 1
fi

stats=($(sudo docker stats --no-stream $id | tail -1))

raw() {
    # KB,MB,GB are used under net IO and block IO
    KiB=1024
     KB=1000
     MB=$(($KB * 1000))
     GB=$(($MB * 1000))
    MiB=$(($KiB * 1024))
    GiB=$(($MiB * 1024))
    cnt=$(echo $1 | tr -cd "[0-9.]")

    case $1 in
        *"GiB")	bc <<< "$cnt * $GiB"    ;;
        *"GB")	bc <<< "$cnt * $GB"     ;;
        *"MiB")	bc <<< "$cnt * $MiB"    ;;
        *"MB")	bc <<< "$cnt * $MB"     ;;
        *"KiB")	bc <<< "$cnt * $KiB"    ;;
        *"kB")	bc <<< "$cnt * $KB"     ;;
        *"B")   echo $cnt               ;;
        *"%")   echo $cnt               ;;
        *)      echo $1                 ;;
    esac
}

get(){
    sudo docker inspect $id | jq .[0]$1 | sed 's/"//g'
}

case $arg in
    name)           echo "${stats[1]}"	    ;;
    net_i)          raw  "${stats[7]}"	    ;;
    net_o)          raw  "${stats[9]}"	    ;;
    block_i)        raw  "${stats[10]}"	    ;;
    block_o)        raw  "${stats[12]}"	    ;;
    mem_usage)	    raw  "${stats[3]}"	    ;;
    mem_limit)	    raw  "${stats[5]}"	    ;;
    mem_percent)    raw  "${stats[6]}"	    ;;
    cpu_percent)    raw  "${stats[2]}"	    ;;
    error)          get  ".State.Error"     ;;
    startedat)      get  ".State.StartedAt" ;;
    restartcount)   get  ".RestartCount"    ;;
    driver)         get  ".Driver"          ;;
    privileged)     get  ".Privileged"      ;;
    user)           get  ".Config.User"     ;;
    image)          get  ".Image"           ;;
    ip)             get  ".NetworkSettings.IPAddress"   ;;
    cpu_limit)      echo $(echo "scale=3;`get '.HostConfig.CpuQuota'` / 1000 / 1000" | bc) ;;
    status)         r=`get ".State.Status"`
                    test "$r" = "running" && echo 0 || echo 1 ;;
esac